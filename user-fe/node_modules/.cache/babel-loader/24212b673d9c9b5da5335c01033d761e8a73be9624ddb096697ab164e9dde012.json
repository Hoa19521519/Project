{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./authSlice\";\nimport userReducer from \"./userSlice\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from \"redux\";\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst reducer = combineReducers({\n  auth: authReducer,\n  users: userReducer\n});\n//   reducer:{\n//       auth: authReducer,\n//       users: userReducer\n//   },\n// });\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","authReducer","userReducer","persistStore","persistReducer","storage","combineReducers","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","reducer","auth","users","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/TÀI LIỆU HỌC TẬP/Phát triển ứng dụng web/Lý thuyết/FinalProject/Project/user-fe/src/redux/store.js"],"sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./authSlice\";\r\nimport userReducer  from \"./userSlice\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\n\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\n\r\nconst reducer = combineReducers({ auth: authReducer,users: userReducer})\r\n//   reducer:{\r\n//       auth: authReducer,\r\n//       users: userReducer\r\n//   },\r\n// });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n\r\n\r\n\r\n\r\nconst store =  configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store;"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,WAAW,MAAO,aAAa;AACtC,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,OAAO;AACvC,SACEC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AAItB,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXT;AACF,CAAC;AAGD,MAAMU,OAAO,GAAGT,eAAe,CAAC;EAAEU,IAAI,EAAEf,WAAW;EAACgB,KAAK,EAAEf;AAAW,CAAC,CAAC;AACxE;AACA;AACA;AACA;AACA;;AAEA,MAAMgB,gBAAgB,GAAGd,cAAc,CAACS,aAAa,EAAEE,OAAO,CAAC;AAM/D,MAAMI,KAAK,GAAInB,cAAc,CAAC;EAC1Be,OAAO,EAAEG,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAChB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAGF,OAAO,MAAMY,SAAS,GAAGrB,YAAY,CAACgB,KAAK,CAAC;AAE5C,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}